# 如果内网访问，设置成内网的IP，如果是外网访问，设置成外网的ip，可以设置多个逗号隔开
# docker 进行运行的话，注释掉或者设置成0.0.0.0
bind 0.0.0.0
# 开启安全防护
protected-mode yes
# 端口
port 6379

# 加速客户端连接，和linux内核有关系，依赖somaxconn and tcp_max_syn_backlog设置大小
tcp-backlog 511

# 客户端连接超时时间 0：表示禁用客户端连接超时
timeout 0

# 长连接存活的时间，新版默认值是300秒
tcp-keepalive 300

# 守护进程运行 如果是docker需要设置为no，不然容器无法运行
# 如果开启，会生成一个pid文件 /var/run/redis.pid
daemonize no

# 可以通过upstart和systemd管理Redis守护进程[ no | systemd | upstart | auto ]
supervised no

# redis启动的时候，创建pid文件，stop的时候，删除pid文件
# 如果不指定pid文件，
# 1. [守护进程方式运行，生成默认的pid文件：/var/run/redis.pid]
# 2. [非守护进程运行，不生成pid文件]
pidfile /var/run/redis_6379.pid





# 日志4个级别[debug|verbose|notice|warning]
loglevel notice


# 日志输出文件,可以不指定(指定空字符串)
# 如果不指定,日志输出到标准输出,打印到屏幕上了
# 如果不指定,而且以守护进程的方式运行,日志呢?去哪了?去/dev/null黑洞了
# 如果开启配置[syslog-enabled yes],日志合并到系统日志上了
logfile ""





# DB的数量,默认客户端使用和连接的是0号数据库,可以在每个连接中切换数据库SELECT <dbid>
databases 16

# 默认redis logo只有在前台运行(非守护线程运行的时候)打印到屏幕上的,如果设置为yes,总是log logo
always-show-logo yes

# RDB数据保存在磁盘上
save 900 1
save 300 10
save 60 10000

# 如果最后一次rdb数据持久化失败了,rdb将停止保存到磁盘上,目的是为了引起运维人员的警觉,系统出问题了,不然就会莫名其妙的丢失数据
# 如果我们有自己强大的监控,可以监控到磁盘和redis server状态,实时的,我们可以关闭这个配置项
stop-writes-on-bgsave-error yes

# 压缩RDB文件,cpu开销大,节省磁盘空间,用cpu换取磁盘
rdbcompression yes

# 由于RDB版本5在文件末尾放置了CRC64校验和，这使得该格式更能抵抗损坏，但在保存和加载RDB文件时会降低性能（约10％），因此可以禁用它为获得最佳性能
# 在禁用校验和的情况下创建的RDB文件的校验和为零，这将告诉加载代码跳过校验
rdbchecksum yes

# rdb文件名
dbfilename dump.rdb

# 如果yes, 删除复制中使用的rdb文件
# 只有在开启aof关闭rdb的情况下,才生效
rdb-del-sync-files no

# RDB文件和aof文件保存的目录
dir ./

# REPLICATION
replica-serve-stale-data yes
replica-read-only yes
repl-diskless-sync no
repl-diskless-sync-delay 5
repl-diskless-load disabled
repl-disable-tcp-nodelay no
replica-priority 100

# 记录失败命令日志到内存中,占用内存,这里设置他的最大值 记录到外部文件中 [aclfile /etc/redis/users.acl]
acllog-max-len 128

# redis6+,此选项只是在acl安全层上的一个向下兼容的配置:为默认用户设置密码
# 详情可以查看acl安全控制
requirepass foobared

lazyfree-lazy-eviction no
lazyfree-lazy-expire no
lazyfree-lazy-server-del no
replica-lazy-flush no


lazyfree-lazy-user-del no


appendonly no

# aof文件名
appendfilename "appendonly.aof"

# 开启aof 3个选项 [no | everysec | always]
appendfsync everysec

no-appendfsync-on-rewrite no


auto-aof-rewrite-percentage 100
auto-aof-rewrite-min-size 64mb

aof-load-truncated yes

aof-use-rdb-preamble yes

lua-time-limit 5000

notify-keyspace-events ""

hash-max-ziplist-entries 512
hash-max-ziplist-value 64

list-max-ziplist-size -2

list-compress-depth 0

set-max-intset-entries 512

zset-max-ziplist-entries 128
zset-max-ziplist-value 64

hll-sparse-max-bytes 3000

stream-node-max-bytes 4096
stream-node-max-entries 100

activerehashing yes

client-output-buffer-limit normal 0 0 0
client-output-buffer-limit replica 256mb 64mb 60
client-output-buffer-limit pubsub 32mb 8mb 60

hz 10

dynamic-hz yes

aof-rewrite-incremental-fsync yes

rdb-save-incremental-fsync yes

