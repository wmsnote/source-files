(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{369:function(a,s,e){"use strict";e.r(s);var t=e(9),l=Object(t.a)({},(function(){var a=this,s=a.$createElement,e=a._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"反射-提高扩展性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#反射-提高扩展性"}},[a._v("#")]),a._v(" 反射-提高扩展性")]),a._v(" "),e("blockquote",[e("p",[a._v("反射的对象,Class Field Constractor Method")])]),a._v(" "),e("h2",{attrs:{id:"_1-创建字节码文件-class-对象的3种方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-创建字节码文件-class-对象的3种方法"}},[a._v("#")]),a._v(" 1. 创建字节码文件(.class)对象的3种方法")]),a._v(" "),e("ol",[e("li",[e("p",[a._v("任何类型都有静态字段class,返回该类型的字节码文件对象")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[a._v(" Class clazz = Person.class;\n")])])])]),a._v(" "),e("li",[e("p",[a._v("任何类都有getClass()方法,定义在Object类中,通过对象调用getClass()方法,返回该对象的字节码文件对象")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[a._v(" Person person = new Person();\n Class clazz = person.getClass();\n")])])])]),a._v(" "),e("li",[e("p",[a._v("类Class静态方法forName()返回类名字节码文件对象")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[a._v(' Class clazz = Class.forName("com.commom.Person");\n 注意: 字符串必须为包名+类名,否则 classNotFindException;\n')])])])])]),a._v(" "),e("h2",{attrs:{id:"_2-创建实例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-创建实例"}},[a._v("#")]),a._v(" 2. 创建实例")]),a._v(" "),e("ol",[e("li",[e("p",[a._v("调用空参的构造方法获取实例")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[a._v(" Object object = clazz.newInstance();\n")])])])]),a._v(" "),e("li",[e("p",[a._v("调用带参的构造方法获取实例")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[a._v(' Constractor constractor = clazz.getDeclaredConstractor(String.class,int.class);//注意: 通过指定类型,获取对应类型的构造器对象\n Object object = constractor.newInstance("wms",30);//构造器对象传入实参,创建对象\n')])])])])]),a._v(" "),e("h2",{attrs:{id:"_3-获取字段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-获取字段"}},[a._v("#")]),a._v(" 3. 获取字段")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[a._v('\tField name = clazz. getDeclaredField ( "name") ;//通过字段名,获取指定字段\n\tField [] fields = clazz .getFields () ;//获取所有字段\n')])])]),e("p",[a._v("AccessiableObject\n|--Method\n|--Field\n|--Constractor")]),a._v(" "),e("p",[a._v("注意:\nclazz.getDeclaredXXX : 获取全部成员,忽略权限修饰,暴力获取clazz.getXXX获取公共(public)成员\n成员对象.setAccessiable(true) : 忽略权限修饰,暴力访问")]),a._v(" "),e("h2",{attrs:{id:"_4-获取方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-获取方法"}},[a._v("#")]),a._v(" 4. 获取方法")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[a._v('\tMethod method = clazz.getDeclaredMethod(String.class,int.class);//获取指定方法\n\tMethod [] declaredMethods = clazz . getDeclaredMethods() ;//获取所有方法\n\tmethod.invoke(object,"wms",30);//调用一般方法,返回的是该方法的返回值,若为静态,object为null')])])])])}),[],!1,null,null,null);s.default=l.exports}}]);